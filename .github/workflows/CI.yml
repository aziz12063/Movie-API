name: Run ReSharper CI

on:
  push:
    branches:
      - CiBranche
  pull_request:
    branches:
      - CiBranche

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'  # Set your desired .NET version

    - name: Restore dependencies
      run: dotnet restore

    - name: Install ReSharper CLI
      run:
          choco install resharper-clt -y

    - name: Find inspectcode executable
      id: find-inspectcode
      run: |
        $installDir = Get-ChildItem -Path "C:\ProgramData\chocolatey\lib" -Recurse -Directory -Filter "resharper-clt" | Select-Object -First 1
        $inspectcodePath = Join-Path -Path $installDir.FullName -ChildPath "tools\inspectcode.exe"
        echo "::set-output name=inspectcode-path::$inspectcodePath"

    - name: Run ReSharper inspections
      run: |
        & ${{ steps.find-inspectcode.outputs.inspectcode-path }} ApiApplication.sln --output=resharper-results.xml

  
    - name: Check ReSharper CLI version
      run: dotnet inspectcode --version
      
    #- name: Find ReSharper CLI executable
     # run: |
      #  export RESHARPER_EXE=$(command -v dotnet-inspectcode)
       # echo "ReSharper CLI executable path: $RESHARPER_EXE"

   # - name: Run ReSharper inspections
    #  run: |
     #   $RESHARPER_EXE ApiApplication.sln --output=resharper-results.xml

      
    - name: Upload ReSharper results
      uses: actions/upload-artifact@v2
      with:
        name: resharper-results
        path: resharper-results.xml


     # - name: Install ReSharper CLI
     #   run:
          #choco install resharper-clt -y
     #     choco install dupfinder -y

    
          
     # - name: ReSharper InspectCode
     #   uses: JetBrains/ReSharper-InspectCode@v0.3
      #  with:
       #   solution: ./ApiApplication.sln
       
     # - name: Run CleanupCode
      #  run: CleanupCode.exe ApiApplication.sln


         

  
