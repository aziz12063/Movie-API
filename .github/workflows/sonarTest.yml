name: sonarTest
on:
  push:
    branches:
      - CiBranche
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    name: Build, test, and analyze
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
          
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarScanner .NET Global Tool
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          dotnet tool install --global dotnet-sonarscanner --version 5.2.4
          
      - name: Check if opencover.runsettings exists
        run: |
          if (-Not (Test-Path "opencover.runsettings")) { echo '<?xml version="1.0" encoding="utf-8"?><RunSettings><DataCollectionRunSettings><DataCollectors><DataCollector friendlyName="XPlat Code Coverage"><Configuration><Format>opencover</Format><Exclude>[xunit.*]*</Exclude></Configuration></DataCollector></DataCollectors></DataCollectionRunSettings></RunSettings>' > opencover.runsettings }
          
      - name: Generate code coverage report
        working-directory: ./ApiApplication  # Specify the main project directory
        shell: powershell
        run: |
          dotnet tool install --global coverlet.console
          dotnet test ApiApplication.csproj --collect:"XPlat Code Coverage" --settings ../opencover.runsettings
          reportgenerator "-reports:**/coverage.cobertura.xml" "-targetdir:coveragereport" "-reporttypes:HtmlInline_AzurePipelines"
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.MYGITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: ./ApiApplication  # Specify the main project directory
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"aziz12063_Movie-API" /o:"aziz-rahimi" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          
          # Build the main project
          dotnet build ApiApplication/ApiApplication.csproj
          
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
